<?xml version="1.0" encoding="utf-8"?>
<Window
    x:Class="ICSharpCode.ILSpy.MainWindow"
	x:ClassModifier="public"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:tv="clr-namespace:ICSharpCode.TreeView;assembly=ICSharpCode.TreeView"
	xmlns:local="clr-namespace:ICSharpCode.ILSpy" xmlns:textView="clr-namespace:ICSharpCode.ILSpy.TextView"
	xmlns:controls="clr-namespace:ICSharpCode.ILSpy.Controls"
	Title="ILSpy"
	MinWidth="250"
	MinHeight="200"
	UseLayoutRounding="True"
	TextOptions.TextFormattingMode="Display"
	FocusManager.FocusedElement="{Binding ElementName=treeView}"
    WindowStyle="None"
    Background="Transparent"
    
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" d:DesignHeight="500" d:DesignWidth="500"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" ResizeMode="CanResize" AllowsTransparency="True" StateChanged="Window_StateChanged"
>
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        <Style TargetType="{x:Type Button}" x:Key="CloseButton">
            <Setter Property="Background" Value="White" />
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="SnapsToDevicePixels" Value="True" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <Path x:Name="PathIcon" Width="16" Height="16" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="F1 m 4,3 -1,1 4,4 -4,4 1,1 4,-4 4,4 1,-1 -4,-4 4,-4 -1,-1 -4,4 z"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Red" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="Maroon" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="MaximizeButton">
            <Setter Property="Background" Value="White" />
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="SnapsToDevicePixels" Value="True" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <Path x:Name="PathIcon" Width="16" Height="16" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="F1 M 3 3 L 3 13 L 13 13 L 13 3 L 3 3 z M 4 6 L 12 6 L 12 12 L 4 12 L 4 6 z"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightGray" />
                                <Setter Property="Foreground" Value="Gray" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="Navy" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="MinimizeButton">
            <Setter Property="Background" Value="White" />
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="SnapsToDevicePixels" Value="True" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <Path x:Name="PathIcon" Width="16" Height="16" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="F1 m 3,11 0,2 8,0 0,-2 z"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightGray" />
                                <Setter Property="Foreground" Value="Gray" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="Navy" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>



    <Window.CommandBindings>
        <CommandBinding
			Command="Open"
			Executed="OpenCommandExecuted" />
        <CommandBinding
			Command="Refresh"
			Executed="RefreshCommandExecuted" />
        <CommandBinding
			Command="Save"
			Executed="SaveCommandExecuted" />
        <CommandBinding
			Command="BrowseBack"
			CanExecute="BackCommandCanExecute"
			Executed="BackCommandExecuted" />
        <CommandBinding
			Command="BrowseForward"
			CanExecute="ForwardCommandCanExecute"
			Executed="ForwardCommandExecuted" />
        <CommandBinding
			Command="Search"
			Executed="SearchCommandExecuted" />
    </Window.CommandBindings>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo />
    </Window.TaskbarItemInfo>

    <Grid Margin="10" Background="White" Name="gridPrimary">
        <Grid.Effect>
            <DropShadowEffect BlurRadius="20" Direction="-90" RenderingBias="Performance" ShadowDepth="3"/>
        </Grid.Effect>
        <Grid.RowDefinitions>
            <RowDefinition Height="8" />
            <RowDefinition Height="52" />
            <RowDefinition Height="*" />
            <RowDefinition Height="8" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="8" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="8" />
        </Grid.ColumnDefinitions>

        <Rectangle Width="8" Height="8" Grid.Column="0" Grid.Row="0" Fill="White" Cursor="SizeNWSE" MouseDown="OnSizeNorthWest" />
        <Rectangle Width="8" Height="8" Grid.Column="2" Grid.Row="0" Fill="White" Cursor="SizeNESW" MouseDown="OnSizeNorthEast" />
        <Rectangle Width="8" Height="8" Grid.Column="0" Grid.Row="3" Fill="White" Cursor="SizeNESW" MouseDown="OnSizeSouthWest" />
        <Rectangle Width="8" Height="8" Grid.Column="2" Grid.Row="3" Fill="White" Cursor="SizeNWSE" MouseDown="OnSizeSouthEast" />
        <Rectangle Width="8" Grid.Column="0" Grid.Row="1" Grid.RowSpan="2" Fill="White" Cursor="SizeWE" MouseDown="OnSizeWest" />
        <Rectangle Width="8" Grid.Column="2" Grid.Row="1" Grid.RowSpan="2" Fill="White" Cursor="SizeWE" MouseDown="OnSizeEast" />
        <Rectangle Height="8" Grid.Column="1" Grid.Row="3" Fill="White" Cursor="SizeNS" MouseDown="OnSizeSouth" />

        <DockPanel Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" >
            <DockPanel DockPanel.Dock="Top" x:Name="TitleBar">
                <Label Content="ILSpy" Margin="0,0,10,0" Padding="5,5,5,10" FontWeight="Bold" MouseDown="TitleBar_MouseDown"></Label>

                <Button Width="26" Height="26" VerticalAlignment="Top" x:Name="CloseButton" DockPanel.Dock="Right" Style="{StaticResource CloseButton}" Click="CloseButton_Click"  />
                <Button Width="26" Height="26" VerticalAlignment="Top" x:Name="MaxButton" DockPanel.Dock="Right" Style="{StaticResource MaximizeButton}" Click="MaxButton_Click" />
                <Button Width="26" Height="26" VerticalAlignment="Top" x:Name="MinButton" DockPanel.Dock="Right" Style="{StaticResource MinimizeButton}" Click="MinButton_Click" />
                
                <Rectangle Height="3" DockPanel.Dock="Top" Fill="White" Cursor="SizeNS" MouseDown="OnSizeNorth" />
                
                <!-- Main menu -->
                <Menu Name="mainMenu" Height="23" Width="130" Background="White" HorizontalAlignment="Left">
                    <MenuItem Header="_File" />
                    <!-- contents of file menu are added using MEF -->
                    <MenuItem Header="_View">
                        <MenuItem Header="Show _internal types and members" IsCheckable="True" IsChecked="{Binding FilterSettings.ShowInternalApi}">
                            <MenuItem.Icon>
                                <Image Width="16" Height="16" Source="Images/PrivateInternal.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                </Menu>

                <Rectangle Fill="White" MouseDown="TitleBar_MouseDown" />
            </DockPanel>

            <!-- ToolBar -->
            <ToolBar
			Name="toolBar"
			DockPanel.Dock="Top" ToolBarTray.IsLocked="True" Background="White" HorizontalAlignment="Left" Width="492" Loaded="toolBar_Loaded">
                <ToolBar.Resources>
                    <!-- Make images transparent if menu command is disabled -->
                    <Style TargetType="{x:Type Image}">
                        <Style.Triggers>
                            <DataTrigger
							Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}, AncestorLevel=1}, Path=IsEnabled}"
							Value="False">
                                <Setter Property="Opacity" Value="0.30" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ToolBar.Resources>
                <!-- 'Navigation' toolbar category is inserted here -->
                <Separator />
                <!-- 'Open' toolbar category is inserted here -->
                <Separator />
                <CheckBox IsChecked="{Binding FilterSettings.ShowInternalApi}" ToolTip="Show internal types and members">
                    <Image Width="16" Height="16" Source="Images/PrivateInternal.png" />
                </CheckBox>
                <Separator />
                <ComboBox Name="languageComboBox" DisplayMemberPath="Name" Width="100"
			          ItemsSource="{x:Static local:Languages.AllLanguages}"
			          SelectedItem="{Binding FilterSettings.Language}"/>
            </ToolBar>
        </DockPanel>

        <!-- Status bar
            <StatusBar x:Name="statusBar" DockPanel.Dock="Bottom" Height="26" Visibility="Collapsed">
                <StatusBarItem DockPanel.Dock="Right">
                    <TextBlock VerticalAlignment="Center"
				           HorizontalAlignment="Right"
				           x:Name="StatusLabel"
				           ToolTip="Status"
				           Text="Stand by..."/>
                </StatusBarItem>
            </StatusBar> -->

        <!-- Main grid separating left pane (treeView) from main pane (textEditor) -->
        <Grid Grid.Row="2" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition
					Name="leftColumn"
					MinWidth="100"
					Width="0.4*" />
                <ColumnDefinition
					Width="3" />
                <ColumnDefinition
					Name="rightColumn"
					MinWidth="100"
					Width="0.6*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition
					Height="*" />
            </Grid.RowDefinitions>
            <!-- Left pane: Tree View of assemblies and classes -->
            <tv:SharpTreeView
				Name="treeView"
				SelectionChanged="TreeView_SelectionChanged"
				ShowRoot="False"
				AllowDropOrder="True"
				AllowDrop="True"
				BorderThickness="0,0,1,0" Visibility="Visible" />
            <GridSplitter
				Grid.ZIndex="1"
				Grid.Column="1"
				Margin="-5,0"
				BorderThickness="5,0"
				HorizontalAlignment="Center"
				VerticalAlignment="Stretch"
				BorderBrush="Transparent" />
            <!-- Right pane: Text Editor -->
            <Grid Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
						Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="0" Name="topPaneRow" />
                    <RowDefinition Height="0" />
                    <RowDefinition Height="0.7*" MinHeight="100" Name="textViewRow" />
                    <RowDefinition Height="0" />
                    <RowDefinition Height="0" Name="bottomPaneRow" />
                </Grid.RowDefinitions>
                <Border BorderBrush="Black" BorderThickness="1" Name="updateAvailablePanel" Visibility="Collapsed">
                    <DockPanel>
                        <Button DockPanel.Dock="Right" Click="updateAvailablePanelCloseButtonClick" MinWidth="0">X</Button>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Margin="4,0" VerticalAlignment="Center">A new ILSpy version is available.</TextBlock>
                            <Button Click="downloadUpdateButtonClick">Download</Button>
                        </StackPanel>
                    </DockPanel>
                </Border>

                <controls:DockedPane x:Name="topPane" Grid.Row="1" Title="Top" Visibility="Collapsed"
					CloseButtonClicked="TopPane_CloseButtonClicked" Margin="0,0,0,3"
					BorderThickness="0,0,0,1" BorderBrush="LightGray" />

                <GridSplitter
					Grid.ZIndex="1"
					Grid.Row="2"
					Margin="0,-2,0,-5"
					BorderThickness="0,2,0,5"
					BorderBrush="Transparent"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Center"
					Visibility="{Binding Visibility, ElementName=topPane}" />

                <!-- decompilerTextView is into the mainPane by code -->
                <ContentPresenter Name="mainPane" Grid.Row="3"/>

                <GridSplitter
					Grid.ZIndex="1"
					Grid.Row="4"
					Margin="0,-2,0,-5"
					BorderThickness="0,2,0,5"
					BorderBrush="Transparent"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Center"
					Visibility="{Binding Visibility, ElementName=bottomPane}" />

                <controls:DockedPane x:Name="bottomPane" Grid.Row="5" Title="Bottom" Visibility="Collapsed"
					CloseButtonClicked="BottomPane_CloseButtonClicked" Margin="0,3,0,0" BorderThickness="1,0,0,0" BorderBrush="LightGray"/>
            </Grid>
        </Grid>
    </Grid>
</Window>